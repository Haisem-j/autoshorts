/* Start purging... */
@tailwind components;

@layer components {
    /* Global Link Style */
    a {
        @apply outline-primary-200 outline-2 active:outline-none;
    }

    /* Container.tsx */
    .Container {
        @apply container mx-auto px-5 xl:px-0;
    }

    /* NavigationContainer.tsx */
    .NavigationContainer {
        @apply border-b dark:border-black-400 pt-1 dark:border-black-400 border-gray-50;
    }

    /* NavigationMenu.tsx */
    .NavigationMenu {
        @apply flex-1 space-x-2 dark:text-gray-300
        items-center flex-row hidden md:flex;
    }

    .NavigationMenu.VerticalNavigationMenu {
        @apply flex flex-row justify-between space-x-2 md:justify-start
        md:flex-col md:space-x-0 md:space-y-2 items-start;
    }

    /* NavigationItem.tsx */
    .NavigationItem {
        @apply leading-loose rounded-md justify-center
        transition-colors dark:text-gray-300
        text-gray-800 flex items-center;
    }

    .NavigationItem a {
        @apply py-2 px-3 block flex font-medium items-center justify-center rounded-md w-full text-sm;
    }

    .NavigationItemActive a {
        @apply bg-primary-50 text-primary-900 dark:text-white dark:bg-black-300 font-semibold;
    }

    .SecondaryNavigationMenu .NavigationItemActive a {
        @apply bg-transparent font-semibold;
    }

    .BorderedNavigationMenu .NavigationItemActive a {
        @apply border-b-[0.2rem] border-primary-500 text-current
        relative top-[1px] bg-transparent rounded-none;
    }

    .NavigationItemNotActive {
        @apply active:text-primary-700 text-gray-600 dark:text-gray-400
        dark:hover:text-white hover:text-current hover:text-primary-900;
    }

    .NavigationItemActive {
        @apply font-semibold text-black-600 dark:text-white;
    }

    .NavigationItem a[aria-disabled='true'] {
        @apply cursor-not-allowed text-gray-300 dark:text-gray-600;
    }

    /* SectionSeparator.tsx */
    .SectionSeparator {
        @apply mt-16 mb-14 dark:border-black-300;
    }

    /* SubHeading.tsx */
    .SubHeading {
        @apply text-2xl leading-[2.2rem] text-gray-500
        dark:text-gray-400 font-normal;
    }

    /* Badge.tsx */
    .Badge {
        @apply flex space-x-2 items-center font-medium;
    }

    .Badge.ColorNormal {
        @apply text-gray-500 bg-gray-100
        dark:text-gray-300 dark:bg-black-300;
    }

    .Badge.ColorSuccess {
        @apply bg-green-100 dark:bg-black-300
        text-green-700 font-semibold;
    }

    .Badge.SizeNormal {
        @apply rounded-lg px-3 py-2 text-sm;
    }

    .Badge.SizeSmall {
        @apply rounded px-2 py-1 text-xs;
    }

    /* Hero.tsx */
    .Hero {
        @apply text-4xl dark:text-white
            font-extrabold tracking-tight
            md:leading-none my-2 sm:my-6;
    }

    /** Alert.tsx */
    .Alert {
        @apply p-4 rounded-lg font-medium flex text-base items-center justify-between text-black-300;
    }

    .Alert.AlertSuccess {
        @apply bg-green-50 dark:bg-green-200;
    }

    .Alert.AlertSuccess .AlertIcon {
        @apply text-green-900;
    }

    .Alert.AlertError {
        @apply bg-red-50 dark:bg-red-100;
    }

    .Alert.AlertError .AlertIcon {
        @apply text-red-900;
    }

    .Alert.AlertWarn {
        @apply bg-orange-50 dark:bg-orange-100;
    }

    .Alert.AlertWarn .AlertIcon {
        @apply text-orange-900;
    }

    .Alert.AlertInfo {
        @apply bg-blue-50 dark:bg-blue-200;
    }

    .Alert.AlertInfo .AlertIcon {
        @apply text-blue-900;
    }

    /* TextField.tsx */
    .TextField {
        @apply flex flex-col space-y-1;
    }

    .TextFieldInputContainer {
        @apply dark:border-black-200 dark:hover:border-black-100 w-full
        border-gray-200 border relative flex h-11
        text-gray-800 dark:text-gray-200 transition-all duration-300
        text-sm items-center flex rounded-md font-medium
        bg-white hover:bg-gray-50 dark:bg-black-500 ring-primary-500
        focus:border-transparent focus-within:ring-2
        focus-within:border-transparent focus-within:hover:border-transparent
        shadow-sm dark:focus:bg-black-400 hover:border-gray-300;
    }

    .TextFieldInputContainerDisabled {
        @apply bg-gray-100 hover:bg-gray-100 dark:bg-black-400 cursor-not-allowed;
    }

    .TextFieldInputContainer input {
        @apply bg-transparent outline-none flex-auto px-2.5;
    }

    .TextFieldInputContainer input:-webkit-autofill,
    .TextFieldInputContainer input:-webkit-autofill:hover,
    .TextFieldInputContainer input:-webkit-autofill:active,
    .TextFieldInputContainer input:-webkit-autofill:focus {
        box-shadow: inset 0 0 0 1000px transparent;
    }

    .TextFieldInputContainer input[data-autocompleted] {
        @apply bg-transparent;
    }

    .TextFieldInputContainer textarea {
        @apply bg-transparent outline-none py-2 px-2
        min-h-[60px] flex-auto resize-none;
    }

    .TextFieldInputContainer.small {
        @apply h-8;
    }

    .TextFieldInput[type='file'] {
        @apply w-full text-sm dark:text-white
        file:mr-4 file:py-2 file:px-4 items-center flex
        file:rounded-full file:border-0 file:cursor-pointer
        file:hover:bg-primary-600 file:active:bg-primary-700
        file:text-sm file:text-white file:font-semibold cursor-pointer
        file:bg-primary-500 bg-transparent shadow-none
        border-transparent justify-center h-10 py-2;
    }

    .TextFieldHint {
        @apply text-xs font-normal text-gray-500
        dark:text-gray-400 leading-tight block pl-1;
    }

    /* Label.tsx */
    .Label {
        @apply text-gray-600 text-sm font-medium w-full dark:text-gray-300;
    }

    .Label > * {
        margin-top: 0.4rem;
    }

    .Label.no-margin > * {
        margin-top: 0;
    }

    /* Button.tsx */
    .Button {
        @apply rounded-md font-semibold transition-colors
        flex items-center justify-center outline-none focus:ring-2;
    }

    .Button.ButtonPrimary {
        @apply bg-primary-500 text-primary-contrast
        hover:bg-primary-600 active:bg-primary-700
        dark:text-primary-contrast ring-primary-400;
    }

    .Button.ButtonDanger {
        @apply bg-red-400 active:bg-red-600 hover:bg-red-500 text-white ring-red-300;
    }

    .Button.ButtonSecondary {
        @apply bg-gray-100 dark:bg-black-300 active:bg-gray-200 ring-gray-200 dark:ring-black-200
        hover:bg-gray-200 dark:hover:bg-black-200 dark:active:bg-black-400;
    }

    .Button.ButtonTransparent {
        @apply hover:bg-gray-50 active:bg-gray-100
        dark:hover:bg-black-400 dark:active:bg-black-300
        ring-primary-50 dark:ring-black-400
        text-gray-800 dark:text-gray-300 font-medium;
    }

    .Button.GradientButton {
        @apply flex !bg-gradient-to-r md:w-auto
        from-indigo-600 text-center text-white md:h-auto
        justify-center to-red-500 hover:from-indigo-800
        transition-all hover:to-red-600 hover:shadow-xl;
    }

    .ButtonNormal {
        @apply text-sm py-2.5 px-5;
    }

    .ButtonLarge {
        @apply py-3 px-5 h-12;
    }

    .ButtonSmall {
        @apply text-xs py-2 px-3;
    }

    .Button.ButtonPrimaryOutline {
        @apply bg-transparent text-primary-700
        border-2 border-primary-500 hover:text-white;
    }

    .Button.ButtonDangerOutline {
        @apply bg-transparent text-red-400
        border-2 border-red-400 hover:text-white;
    }

    .Button.ButtonDangerFlat {
        @apply bg-transparent text-red-500 hover:bg-red-50 ring-0
        active:bg-red-100 dark:hover:bg-red-500/10 dark:active:bg-red-500/20;
    }

    .Button.ButtonDangerFlat {
        @apply bg-transparent text-red-500 hover:bg-red-50 active:bg-red-100;
    }

    .Button[disabled],
    .IconButton[disabled] {
        @apply opacity-50 cursor-not-allowed;
    }

    /* IconButton.tsx */
    .IconButton {
        @apply rounded-full bg-transparent hover:bg-gray-100
        dark:hover:bg-black-300 transition-colors duration-300
        dark:active:bg-gray-100 dark:active:bg-black-200 p-1
        outline-primary-300 focus:ring ring-primary-400;
    }

    /* ImageUploadInput.tsx */
    .ImageUploadInput {
        @apply TextFieldInput cursor-pointer relative
        border-dashed bg-white dark:bg-black-500
        hover:bg-gray-50 dark:hover:border-black-300
        transition-colors duration-300 border
        border-gray-200 dark:border-black-200
        p-2.5 rounded-lg dark:hover:border-black-100;
    }

    /* Footer.tsx */
    .Footer {
        @apply py-8 lg:py-16;
    }

    /* Popover.tsx */
    button.PopoverButton {
        @apply flex flex-row py-2 px-3
        dark:hover:bg-black-200 dark:active:bg-black-100
        items-center w-full dark:bg-black-300 rounded-md
        bg-gray-100 hover:bg-gray-200 active:bg-gray-300 border
        dark:border-black-300 text-sm dark:focus:bg-black-300
        transition-colors outline-none dark:text-white border-transparent;
    }

    button.PopoverButtonActive {
        @apply rounded-bl-none rounded-br-none border-b-transparent;
    }

    .PopoverChevronDownIcon {
        @apply ml-2 h-4 w-4 group-hover:text-opacity-80
        transition ease-in-out duration-150;
    }

    .PopoverPanel {
        @apply absolute rounded-bl-md rounded-br-md shadow-lg
        z-10 px-2 transform sm:px-0
        w-full bg-white dark:bg-black-300;
    }

    .PopoverPanelItem {
        @apply flex bg-transparent dark:hover:bg-black-300
        active:bg-gray-100 dark:active:bg-black-300
        items-center cursor-pointer transition
        duration-150 ease-in-out focus:outline-none;
    }

    .PopoverItemLabel {
        @apply text-sm font-semibold text-gray-700
        hover:text-black-500 dark:hover:text-white
        dark:text-gray-300 py-3 px-4 ellipsify;
    }

    .PopoverItemIcon {
        @apply flex items-center justify-center flex-shrink-0
        w-10 h-10 text-current sm:h-12 sm:w-12;
    }

    .TabsList {
        @apply flex px-1 py-1 dark:bg-black-500 grid grid-cols-3 gap-1;
    }

    /* Tab.tsx */
    .Tab {
        @apply NavigationItem flex flex-1 justify-center;
    }

    .Tab:not(.TabSelected) {
        @apply hover:bg-gray-50 dark:active:bg-black-300
        cursor-pointer dark:bg-black-500 dark:hover:bg-black-400;
    }

    .TabSelected,
    button.TabSelected {
        @apply NavigationItemActive dark:text-gray-100;
    }

    /* ListBox.tsx */
    .ListBoxButton {
        @apply TextFieldInputContainer px-2.5 h-11 text-left
        font-semibold hover:text-current dark:text-current;
    }

    .ListBoxButton.ListBoxButtonAlt {
        @apply small pl-3 py-1 font-bold bg-gray-100 hover:bg-gray-200
        dark:bg-black-300 dark:hover:bg-black-200 dark:text-gray-200
        border-transparent;
    }

    .ListBoxButtonOpen {
        @apply border-primary-500;
    }

    .ListBoxButtonIcon {
        @apply absolute inset-y-0 right-0 flex
        items-center pr-2 pointer-events-none;
    }

    .ListBoxOptionsContainer {
        @apply absolute w-full mt-0.5 overflow-auto
        text-base bg-white dark:bg-black-300
        rounded-lg shadow-md max-h-96 z-50;
    }

    /* ListBoxOption.tsx */
    .ListBoxOption {
        @apply cursor-default select-none relative
        py-3 pl-4 pr-4 font-semibold
        text-sm transition-colors duration-75
        border-b dark:border-b-black-400 border-gray-50
    }

    .ListBoxOption.ListBoxOption[aria-disabled='true'] {
        @apply text-gray-500;
    }

    .ListBoxOptionNotActive {
        @apply dark:text-gray-200 dark:bg-black-400 text-gray-900;
    }

    .ListBoxOptionActive {
        @apply cursor-pointer text-gray-900
        bg-gray-50 dark:bg-black-300 dark:text-white;
    }

    .ListBoxOptionSelected {
        @apply bg-gray-100 dark:bg-black-300 dark:text-white
    }

    .ListBoxOptionIcon {
        @apply absolute inset-y-0 right-0 top-3 items-center pr-3;
    }

    .ListBoxOptionDescription {
        @apply text-gray-600 dark:text-gray-400
        leading-tight font-medium text-[0.7rem];
    }

    /* FallbackUserAvatar.tsx */
    .FallbackUserAvatar {
        @apply h-9 w-9 text-lg flex items-center
        transition-all justify-center
        bg-primary-500 hover:bg-primary-600
        rounded-full uppercase font-extrabold
        text-black-500 text-primary-contrast;
    }

    /* Dropdown.tsx */
    .DropdownMenu {
        @apply lg:relative block text-left;
    }

    .DropdownMenuItemsContainer {
        @apply z-10 absolute right-0 w-full lg:w-60 mt-2
        lg:mt-2 origin-top-right bg-white dark:bg-black-400
        lg:rounded-md shadow-xl focus:outline-none
        border-t border-gray-50 dark:border-black-300 py-1;

        top: var(--dropdown-menu-items-top, auto);
        bottom: var(--dropdown-menu-items-bottom, auto);
    }

    .DropdownItem {
        @apply flex flex-1 items-center w-full border-none
        sm:text-sm dark:text-white duration-200;
    }

    .DropdownMenuButtonContainer {
        @apply flex items-center;
    }

    .DropdownItem button[disabled],
    .DropdownMenuButtonContainer button[disabled] {
        @apply opacity-40 cursor-not-allowed;
    }

    .DropdownButtonContainer {
        @apply cursor-pointer items-center flex;
    }

    .DropdownButtonContainer button {
        @apply dark:active:bg-black-300 active:bg-gray-50
        dark:outline-black-400 h-full;
    }

    .DropdownActiveItem .Button:not(.static) {
        @apply bg-gray-50 dark:bg-black-300 rounded-none text-black-500 dark:text-current;
    }

    .DropdownActiveItem .Button.static {
        @apply cursor-text;
    }

    .DropdownDivider {
        @apply bg-gray-200 dark:bg-black-300 border-none h-[1px];
    }

    /* Documentation */
    .DocumentationSidebarContainer {
        @apply mt-6 sticky inset-0 hidden
        md:flex overflow-y-auto h-screen;
    }

    .DocumentationSidebarItem {
        @apply pl-4 border-l-2 dark:active:bg-black-400 active:bg-gray-100
        md:text-[0.8rem] dark:hover:border-l-primary-400
        py-1.5 px-3 transition-colors duration-300;
    }

    .DocumentationSidebarItemContainer:last-child {
        @apply pb-24;
    }

    .DocumentationSidebarItemSelected {
        @apply font-semibold dark:text-primary-500
        border-l-primary-400;
    }

    .DocumentationSidebarItemNotSelected {
        @apply hover:border-l-primary-400 dark:hover:text-white
        dark:border-l-black-400 font-medium;
    }

    .AuthProviderButton {
        @apply border border-gray-200 dark:border-black-300
        hover:bg-gray-100 active:bg-gray-200 hover:border-gray-300
        dark:hover:border-black-400 dark:bg-black-400
        dark:hover:bg-black-400/80 dark:active:bg-black-400
        transition-all relative text-gray-600 dark:text-gray-200;
    }

    .Toggle {
        @apply h-6 w-12 cursor-pointer appearance-none
        bg-gray-600 dark:bg-gray-300 duration-300 ease-in-out rounded-xl;

        transition: all 0.25s ease-in-out;
        box-shadow: calc(1.5rem * -1) 0 0 2px #efefef inset, 0 0 0 2px #efefef inset;
    }

    .dark .Toggle {
        box-shadow: calc(1.5rem * -1) 0 0 2px #525252 inset, 0 0 0 2px #525252 inset;
    }

    .Toggle:hover {
        box-shadow: calc(1.5rem * -1) 0 0 2px #ddd inset, 0 0 0 2px #ddd inset;
    }

    .dark .Toggle:hover {
        box-shadow: calc(1.5rem * -1) 0 0 2px #666 inset, 0 0 0 2px #666 inset;
    }

    .Toggle:focus-visible {
        @apply outline outline-primary-500;

        outline-offset: 2px;
    }

    .Toggle:checked {
        @apply border-opacity-100 bg-opacity-100
        bg-primary-500 border-primary-400;

        box-shadow: 1.5rem 0 0 2px #eee inset, 0 0 0 2px #eee inset;
    }

    .dark .Toggle:checked {
        box-shadow: 1.5rem 0 0 2px #444 inset, 0 0 0 2px #444 inset;
    }

    .Stepper {
        @apply flex space-x-2 justify-between shadow
        dark:border-black-400 dark:shadow
        dark:bg-black-400 px-2 py-1 rounded-md;
    }

    .StepperDivider {
        @apply flex bg-gray-300 dark:bg-black-200
        h-[2px] flex-1 transition-colors;

        align-items: center;
        justify-items: center;
        justify-self: center;
        align-self: center;
    }

    .StepperDivider:last-child {
        display: none;
    }

    .StepperStepSelected + .StepperDivider,
    .StepperStep.CompletedStep + .StepperDivider {
        @apply bg-primary-500;
    }

    .StepperStep:not(.StepperStepSelected):not(.CompletedStep):hover + .StepperDivider {
        @apply bg-primary-500/40;
    }

    .StepperStepCircle {
        @apply rounded-full w-[35px] h-[35px] shadow duration-75
        font-bold flex justify-center items-center
        bg-gray-200 dark:bg-black-200 transition-colors;
    }

    .StepperStep.StepperStepSelected {
        @apply dark:text-white;
    }

    .StepperStepSelected .StepperStepCircle {
        @apply bg-primary-500 text-white;
    }

    .StepperStep {
        @apply flex items-center space-x-4 dark:text-gray-400
        text-current transition-colors p-2;
    }

    .StepperStep:not(.StepperStepSelected):not([disabled]).hover .StepperStepCircle {
        @apply bg-primary-500 text-white;
    }

    .StepperStep:not(.StepperStepSelected):hover {
        @apply dark:text-gray-50;
    }

    .StepperStep:disabled {
        opacity: 90%;
    }

    /*
     faq.tsx
     */
    .FaqItem {
        @apply rounded-xl border border-gray-100
        dark:border-black-300 bg-gray-50 p-8
        dark:bg-black-500
    }

    /* PlanSelector.tsx */
    .PlanSelectorRadioItem {
        @apply relative flex cursor-pointer rounded-lg border border-gray-50
        px-5 py-4 shadow focus:outline-none dark:border-black-400
        transition-colors;
    }

    .PlanSelectorRadioItemNonActive {
        @apply hover:bg-gray-50 dark:bg-black-300
        dark:hover:bg-black-400 dark:active:bg-black-500
        active:bg-gray-200;
    }

    .PlanSelectorRadioItemChecked {
        @apply bg-gray-100 ring-2 dark:bg-black-400 ring-primary-400;
    }

    .PlanSelectorCheckIcon {
        @apply h-6 w-6 rounded-full bg-primary-400 fill-transparent;
    }

    .PlanSelectorName {
        @apply text-sm font-bold text-current dark:text-white;
    }

    .PlanSelectorPrice {
        @apply text-sm font-bold dark:text-white;
    }

}
/* Stop purging. */
